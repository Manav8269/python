pipeline {
    agent any

    environment {
        SONAR_HOST_URL = 'http://localhost:9000'  // SonarQube URL (Update if needed)
        SONAR_PROJECT_KEY = 'python_project'      // Unique SonarQube project key
        SONAR_TOKEN = credentials('sonarqube-token') // Store in Jenkins credentials
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/Manav8269/python.git'
            }
        }

        stage('Setup Python Environment') {
            steps {
                script {
                    sh 'python -m venv venv'
                    sh 'source venv/bin/activate'
                    sh 'pip install -r requirements.txt'
                }
            }
        }

        stage('Run Tests & Coverage') {
            steps {
                script {
                    sh 'source venv/bin/activate && coverage run -m unittest discover'
                    sh 'source venv/bin/activate && coverage report'
                    sh 'source venv/bin/activate && coverage xml -o coverage.xml'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    sh """
                        sonar-scanner \
                        -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=${SONAR_HOST_URL} \
                        -Dsonar.login=${SONAR_TOKEN} \
                        -Dsonar.python.coverage.reportPaths=coverage.xml
                    """
                }
            }
        }

        stage('Archive Artifacts') {
            steps {
                archiveArtifacts artifacts: 'coverage.xml', fingerprint: true
            }
        }
    }

    post {
        always {
            script {
                sh 'deactivate'
            }
        }
    }
}
