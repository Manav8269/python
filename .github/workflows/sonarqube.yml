name: SonarQube Code Analysis

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SONAR_PROJECT_KEY: ${{ github.repository_owner }}_${{ github.event.repository.name }}
  SONAR_PROJECT_NAME: ${{ github.repository }}
  WORKSPACE: ${{ github.workspace }}
  LANG: C.UTF-8
  LC_ALL: C.UTF-8
  PYTHONUTF8: 1
  NODE_VERSION: '18'
  SONAR_SCANNER_VERSION: "5.0.1.3006"

jobs:
  analyze:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      checks: write
      pull-requests: read
      issues: write  # Required for creating GitHub issues

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install SonarScanner
        run: |
          sudo apt-get update -y && sudo apt-get install -y unzip
          SCANNER_DIR="$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION"
          mkdir -p "$HOME/.sonar"
          curl -sSLo /tmp/sonar-scanner.zip \
            "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip"
          unzip -q /tmp/sonar-scanner.zip -d /tmp/
          mv "/tmp/sonar-scanner-$SONAR_SCANNER_VERSION-linux" "$SCANNER_DIR"
          rm /tmp/sonar-scanner.zip
          echo "$SCANNER_DIR/bin" >> $GITHUB_PATH
          echo "SONAR_SCANNER_HOME=$SCANNER_DIR" >> $GITHUB_ENV

      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo "Running SonarQube analysis..."
          sonar-scanner \
            -Dsonar.projectKey=$SONAR_PROJECT_KEY \
            -Dsonar.projectName=$SONAR_PROJECT_NAME \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.scm.provider=git \
            -Dsonar.scm.revision=$GITHUB_SHA \
            -Dsonar.sources=. \
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/coverage/** 
          echo "SONAR_STATUS=success" >> $GITHUB_ENV

      - name: Capture SonarQube Failure
        if: failure()
        run: echo "SONAR_STATUS=failure" >> $GITHUB_ENV

      - name: Create GitHub Issue for SonarQube Result
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "$SONAR_STATUS" == "success" ]]; then
            TITLE="✅ SonarQube Analysis Passed: ${{ github.sha }}"
            LABEL="success"
            BODY="SonarQube analysis passed successfully for commit: **${{ github.sha }}** 🚀  
            🔗 **Branch**: ${{ github.ref }}  
            📂 **Repository**: ${{ github.repository }}  
            🛠 **Triggered By**: ${{ github.actor }}  

            Check the [GitHub Actions logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details."
          else
            TITLE="🚨 SonarQube Analysis Failed: ${{ github.sha }}"
            LABEL="bug"
            BODY="SonarQube analysis failed for commit: **${{ github.sha }}** ❌  
            🔗 **Branch**: ${{ github.ref }}  
            📂 **Repository**: ${{ github.repository }}  
            🛠 **Triggered By**: ${{ github.actor }}  

            Please check the [GitHub Actions logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details."
          fi

          gh issue create --title "$TITLE" \
                          --body "$BODY" \
                          --label "$LABEL" \
                          --repo ${{ github.repository }}
