name: SonarQube Code Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install coverage

      - name: Run Tests and Generate Coverage Report
        run: |
          mkdir -p test-results coverage
          coverage run -m unittest discover
          coverage xml -o coverage.xml

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

      - name: SonarQube Scan
        run: |
          sonar-scanner \
            -Dsonar.projectKey=Manav8269_python \
            -Dsonar.organization=your-org-name \
            -Dsonar.host.url=https://your-sonarqube-server.com \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.python.coverage.reportPaths=coverage.xml

      - name: Fetch SonarQube Coverage
        run: |
          if [ -f "sonar-report.json" ]; then
            COVERAGE=$(jq '.component.measures[] | select(.metric == "coverage") | .value' sonar-report.json)
            echo "SonarQube Coverage: $COVERAGE%"
          else
            echo "SonarQube report not found!"
            exit 1
          fi

      - name: Check Coverage and Create GitHub Issue if Low
        run: |
          COVERAGE_VALUE=$(jq -r '.component.measures[] | select(.metric == "coverage") | .value' sonar-report.json)
          if (( $(echo "$COVERAGE_VALUE < 80" | bc -l) )); then
            echo "Code coverage is below 80%! Creating a GitHub issue..."
            gh issue create --title "Low Code Coverage Alert" --body "The latest SonarQube scan detected code coverage below 80%. Please improve test coverage."
          else
            echo "Code coverage is satisfactory."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
