on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  SONAR_PROJECT_KEY: ${{ github.repository_owner }}_${{ github.event.repository.name }}
  SONAR_PROJECT_NAME: ${{ github.repository }}
  WORKSPACE: ${{ github.workspace }}
  LANG: C.UTF-8
  LC_ALL: C.UTF-8
  PYTHONUTF8: 1
  NODE_VERSION: '18'
  SONAR_SCANNER_VERSION: "5.0.1.3006"

jobs:
  analyze:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      checks: write
      pull-requests: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://1217-27-107-135-240.ngrok-free.app"
        run: |
          echo "Preparing SonarQube analysis..."
          properties=(
            "-Dsonar.projectKey=$SONAR_PROJECT_KEY"
            "-Dsonar.projectName=$SONAR_PROJECT_NAME"
            "-Dsonar.host.url=$SONAR_HOST_URL"
            "-Dsonar.login=$SONAR_TOKEN"
            "-Dsonar.sourceEncoding=UTF-8"
            "-Dsonar.scm.provider=git"
            "-Dsonar.scm.revision=$GITHUB_SHA"
            "-Dsonar.working.directory=$RUNNER_TEMP/.sonar"
            "-Dsonar.sources=."
            "-Dsonar.tests=."
            "-Dsonar.test.inclusions=**/*.test.*,**/__tests__/**/*.*"
            "-Dsonar.exclusions=**/node_modules/**,**/dist/**,**/coverage/**"
          )

          if [ "$REACT_PROJECT" == "true" ] || [ "$ANGULAR_PROJECT" == "true" ]; then
            properties+=(  
              "-Dsonar.javascript.lcov.reportPaths=coverage/lcov.info"
              "-Dsonar.typescript.lcov.reportPaths=coverage/lcov.info"
              "-Dsonar.testExecutionReportPaths=test-results/sonar-test.xml"
            )
          fi

          if [ "$PYTHON_PROJECT" == "true" ]; then
            properties+=(  
              "-Dsonar.python.coverage.reportPaths=coverage.xml"
              "-Dsonar.python.xunit.reportPath=junit-results.xml"
            )
          fi

          if [ "$REACT_PROJECT" == "true" ]; then
            properties+=(  
              "-Dsonar.javascript.react.reactEnabled=true"
              "-Dsonar.javascript.file.suffixes=.js,.jsx"
              "-Dsonar.typescript.file.suffixes=.ts,.tsx"
            )
          elif [ "$ANGULAR_PROJECT" == "true" ]; then
            properties+=(  
              "-Dsonar.angular.enabled=true"
              "-Dsonar.typescript.file.suffixes=.ts"
            )
          fi

          echo "Running SonarScanner with:"
          printf '%s\n' "${properties[@]}"
          
          sonar-scanner "${properties[@]}"
          echo "SonarQube analysis completed with status $?"
