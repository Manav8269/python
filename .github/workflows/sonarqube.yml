name: SonarQube Code Analysis

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  analyze:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Dependencies and Run Tests
        run: |
          if [ -f package.json ]; then
            npm ci
            npm test -- --coverage
          fi
          if [ -f requirements.txt ]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            pytest --cov=. --cov-report=xml
          fi

      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=${{ github.repository }} \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.sources=. \
            -Dsonar.python.coverage.reportPaths=coverage.xml

      - name: Check SonarQube Quality Gate Status
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo "Checking SonarQube quality gate..."
          PROJECT_KEY=${{ github.repository }}
          API_URL="$SONAR_HOST_URL/api/qualitygates/project_status?projectKey=$PROJECT_KEY"
          RESPONSE=$(curl -s -u "$SONAR_TOKEN:" "$API_URL")
          QUALITY_STATUS=$(echo "$RESPONSE" | jq -r '.projectStatus.status')
          echo "Quality Gate Status: $QUALITY_STATUS"
          
          if [ "$QUALITY_STATUS" != "OK" ]; then
            echo "SonarQube quality gate failed. Failing workflow."
            echo "SONAR_STATUS=failure" >> $GITHUB_ENV
            exit 1
          else
            echo "SonarQube quality gate passed!"
            echo "SONAR_STATUS=success" >> $GITHUB_ENV
          fi

      - name: Create GitHub Issue for Quality Gate Status
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "$SONAR_STATUS" == "failure" ]; then
            gh issue create --title "ðŸš¨ SonarQube Quality Gate Failed" \
              --body "The latest code analysis failed due to insufficient quality. Please review the SonarQube report." \
              --label "bug,coverage"
          else
            gh issue create --title "âœ… SonarQube Quality Gate Passed" \
              --body "Good job! The latest code analysis passed. Keep up the great work! ðŸŽ‰"

      - name: Notify via Email (if Quality Gate Fails)
        if: env.SONAR_STATUS == 'failure'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "ðŸš¨ SonarQube Quality Gate Failed"
          body: "Your latest code analysis did not meet the quality standards. Please check the SonarQube report."
          to: "developer@example.com"
          from: "GitHub Actions"
