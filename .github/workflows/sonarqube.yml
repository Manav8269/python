name: CI/CD with SonarQube and Django

on:
  push:
    branches:
      - main

permissions:
  issues: write
  contents: read

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    outputs:
      sonar-status: ${{ steps.sonar_status.outputs.status }}
      sonar-score: ${{ steps.sonar_status.outputs.score }}

    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: 📂 Locate Django Project
        id: find_project
        run: |
          PROJECT_DIR=$(find . -name manage.py -exec dirname {} \; | head -n1)
          if [ -z "$PROJECT_DIR" ]; then
            echo "::error::manage.py not found!"
            exit 1
          fi
          echo "PROJECT_DIR=$PROJECT_DIR" >> $GITHUB_ENV

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r "$PROJECT_DIR/requirements.txt" pytest coverage django

      - name: 🧪 Run Tests and Generate Coverage
        run: |
          cd "$PROJECT_DIR"
          python -m coverage run --source=. --module manage.py test
          python -m coverage run --source=. --append -m pytest tests/
          python -m coverage xml
          python -m coverage report

      - name: 🔍 SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://7bca-27-107-135-240.ngrok-free.app"
        with:
          args: >
            -Dsonar.projectKey=my-django-project
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.python.version=3.9
            -Dsonar.working.directory=${{ env.PROJECT_DIR }}/.scannerwork

      - name: 📊 Check Quality Gate
        id: sonar_status
        run: |
          sleep 15
          STATUS=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: "$SONAR_HOST_URL/api/qualitygates/project_status?projectKey=my-django-project" | jq -r '.projectStatus.status')
          SCORE=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: "$SONAR_HOST_URL/api/measures/component?component=my-django-project&metricKeys=coverage" | jq -r '.component.measures[] | select(.metric == "coverage").value')
          
          echo "status=$STATUS" >> $GITHUB_OUTPUT
          echo "score=$SCORE" >> $GITHUB_OUTPUT

  notify:
    runs-on: ubuntu-latest
    needs: [build-and-analyze]
    if: always()

    steps:
      - name: 📢 Create GitHub Issue
        uses: actions/github-script@v6
        with:
          script: |
            const { sonar-status, sonar-score } = context.needs['build-and-analyze'].outputs;
            let title, body;
            
            if (sonar-status === 'OK' && sonar-score >= 80) {
              title = '✅ Quality Gate Passed';
              body = `🎉 Your code passed SonarQube analysis with a score of ${sonar-score}%`;
            } else {
              title = '❌ Quality Gate Failed';
              body = '😞 Your code failed SonarQube analysis. Please check the report for details.';
            }

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body
            });
