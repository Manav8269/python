name: Code Coverage with SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug File System
        run: ls -R

      - name: Find Project Directory
        id: find_project_dir
        run: |
          if [ -f package.json ]; then
            echo "PROJECT_DIR=." >> $GITHUB_ENV
          elif [ -d */ ] && [ -f */package.json ]; then
            PROJECT_DIR=$(find . -maxdepth 2 -name package.json -exec dirname {} \; | head -n 1)
            echo "PROJECT_DIR=$PROJECT_DIR" >> $GITHUB_ENV
          else
            echo "Error: package.json not found. Check repository structure."
            exit 1
          fi
      
      - name: Install Dependencies
        run: npm install
        working-directory: ${{ env.PROJECT_DIR }}

      - name: Run Tests with Coverage
        run: CI=true npm test -- --coverage --watchAll=false || { echo "Jest tests failed"; exit 1; }
        working-directory: ${{ env.PROJECT_DIR }}

      - name: Debug Coverage Directory
        run: ls -lah ${{ env.PROJECT_DIR }}/coverage

      - name: Verify Coverage Directory
        run: |
          if [ ! -d "${{ env.PROJECT_DIR }}/coverage" ]; then
            echo "Error: Coverage directory not found!"
            exit 1
          fi

      - name: Verify Coverage File
        run: |
          if [ ! -f "${{ env.PROJECT_DIR }}/coverage/coverage-summary.json" ]; then
            echo "Error: coverage-summary.json not found!"
            exit 1
          fi

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ${{ env.PROJECT_DIR }}/coverage/

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://e83a-27-107-135-240.ngrok-free.app"
        with:
          args: >
            -Dsonar.projectKey=react-calculator
            -Dsonar.sources=${{ env.PROJECT_DIR }}/src
            -Dsonar.javascript.lcov.reportPaths=${{ env.PROJECT_DIR }}/coverage/lcov.info
            -Dsonar.qualitygate.wait=true

      - name: Check Code Coverage Threshold
        run: |
          COVERAGE=$(jq '.total.lines.pct' ${{ env.PROJECT_DIR }}/coverage/coverage-summary.json)
          echo "Code Coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Code coverage is below 80%. Failing the workflow."
            exit 1
          fi
