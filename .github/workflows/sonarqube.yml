name: Django CI/CD with SonarQube

on:
  push:
    branches: [main]

permissions:
  contents: write
  issues: write
  pull-requests: write

env:
  SONAR_HOST_URL: https://501e-27-107-135-240.ngrok-free.app
  SONAR_PROJECT_KEY: my-django-project
  PYTHON_VERSION: '3.9'

jobs:
  quality-check:
    name: üõ†Ô∏è Build & Quality Gate
    runs-on: ubuntu-latest
    outputs:
      quality_gate: ${{ steps.check-quality-gate.outputs.status }}

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: üîç Discover Django Project
        id: project-discovery
        run: |
          PROJECT_DIR=$(find . -name manage.py -printf '%h\n' | head -n1)
          echo "PROJECT_DIR=$PROJECT_DIR" >> $GITHUB_ENV
          echo "python_path=$(dirname $PROJECT_DIR)" >> $GITHUB_OUTPUT

      - name: üì¶ Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r "$PROJECT_DIR/requirements.txt"

      - name: ‚úÖ Run Tests
        run: |
          cd "$PROJECT_DIR"
          python -m pytest --cov=. --cov-report=xml

      - name: üîé SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.python.version=${{ env.PYTHON_VERSION }}

      - name: üìä Check Quality Gate
        id: check-quality-gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  notifications:
    name: üì¢ Notifications
    needs: quality-check
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Issue
        if: ${{ always() }}
        uses: actions/github-script@v6
        with:
          script: |
            const status = '${{ needs.quality-check.outputs.quality_gate }}';
            if (status === 'OK') {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Quality Gate Passed ‚úÖ',
                body: 'All checks passed successfully!'
              });
            } else {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Quality Gate Failed ‚ùå',
                body: 'Quality check failed! Review findings.'
              });
            }

      - name: Send Email
        uses: dawidd6/action-send-mail@v3
        if: ${{ always() }}
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          to: guptamanav8269@gmail.com
          subject: CI/CD Status - ${{ job.status }}
          body: |
            Quality Gate Status: ${{ needs.quality-check.outputs.quality_gate }}
            Details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  safe-revert:
    name: ‚è™ Safe Revert
    needs: quality-check
    if: ${{ needs.quality-check.outputs.quality_gate != 'OK' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          ref: main

      - name: Create Revert Commit
        run: |
          git config --global user.name "GitHub CI"
          git config --global user.email "ci@github.com"
          git revert HEAD --no-edit
          git push origin main

      - name: Create Revert PR
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "Revert failed changes"
          title: "Revert: ${{ github.event.head_commit.message }}"
          body: "Automated revert due to quality gate failure"
          branch: "revert-${{ github.run_id }}"
          base: main
